{"version":3,"sources":["components/Form.js","components/Todo.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","inputText","setInputText","todos","setTodos","setStatus","value","onChange","e","console","log","target","type","className","onClick","preventDefault","text","completed","id","Math","random","name","Todo","todo","map","item","filter","el","TodoList","filteredTodos","App","useState","status","setFilteredTodos","useEffect","getLocalTodos","filterHandler","saveLocalTodos","localStorage","setItem","JSON","stringify","getItem","todoLocal","parse","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d5ab7205.chunk.js","sourcesContent":["/* eslint-disable react/prop-types */\n/* eslint-disable no-unused-vars */\nimport React from 'react';\n\n\nconst Form = ({ inputText, setInputText, todos, setTodos, setStatus }) => {\n\n    const inputTextHandler = (e) => {\n        console.log(e.target.value);\n        setInputText(e.target.value);\n    }\n\n    const submitTodoHandler = (e) => {\n        e.preventDefault();\n        setTodos([\n            ...todos, { text: inputText, completed: false, id: Math.random() * 1000 },\n        ])\n    }\n\n    const statusHandler = (e) => {\n        setStatus(e.target.value)\n    }\n\n    return (\n        <form>\n            <input\n                value={inputText}\n                onChange={inputTextHandler}\n                type=\"text\"\n                className=\"todo-input\"\n            />\n            <button\n                onClick={submitTodoHandler}\n                className=\"todo-button\"\n                type=\"submit\"\n            >\n                <i className=\"fas fa-plus-square\"></i>\n\n            </button>\n\n            <div className=\"select\">\n                <select onChange={statusHandler} name=\"todos\" className=\"filter-todo\">\n                    <option value=\"all\">Alle</option>\n                    <option value=\"completed\">Erledigt</option>\n                    <option value=\"uncompleted\">Zu erledigen</option>\n                </select>\n            </div>\n        </form>\n    );\n};\n\nexport default Form;","import React from 'react'\n\nconst Todo = ({ text, todo, todos, setTodos }) => {\n\n    const deleteHandler = () => {\n        setTodos(todos.filter((el) => el.id !== todo.id));\n    };\n\n    const completeHandler = () => {\n        setTodos(todos.map(item => {\n            if (item.id === todo.id) {\n                return {\n                    ...item, completed: !item.completed\n                }\n            }\n            return item;\n        }));\n    }\n\n    return (\n        <div className=\"todo\">\n            <li className={`todo-item ${todo.completed ? \"completed\" : ''}`}>{text}</li>\n\n            <button onClick={completeHandler} className=\"complete-btn\">\n                <i className=\"fas fa-check\"></i>\n            </button>\n\n            <button onClick={deleteHandler} className=\"trash-btn\">\n                <i className=\"fas fa-trash\"></i>\n            </button>\n        </div>\n    );\n};\n\nexport default Todo;\n","import React from 'react';\n\n//importing Components\nimport Todo from './Todo';\n\nconst TodoList = ({ todos, setTodos, filteredTodos }) => {\n    return (\n        <div className=\"todo-container\">\n            <ul className=\"todo-list\">\n                {filteredTodos.map((todo) => (\n                    <Todo\n                        setTodos={setTodos}\n                        todos={todos}\n                        key={todo.id}\n                        todo={todo}\n                        text={todo.text}\n                    />\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default TodoList;","import React, { useState, useEffect } from \"react\";\nimport ReactDOM from 'react-dom';\nimport './App.css';\n//importing Components\nimport Form from \"./components/Form\"\nimport TodoList from \"./components/TodoList\";\n\nfunction App() {\n\n  const [inputText, setInputText] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [status, setStatus] = useState('all');\n  const [filteredTodos, setFilteredTodos] = useState([]);\n\n  useEffect(() => {\n    getLocalTodos();\n  }, []);\n\n  useEffect(() => {\n    filterHandler();\n    saveLocalTodos();\n  }, [todos, status])\n\n  const filterHandler = () => {\n    switch (status) {\n      case 'completed':\n        setFilteredTodos(todos.filter(todo => todo.completed === true));\n        break;\n      case 'uncompleted':\n        setFilteredTodos(todos.filter(todo => todo.completed === false));\n        break;\n      default:\n        setFilteredTodos(todos)\n        break;\n    }\n  };\n\n  // save to local\n  const saveLocalTodos = () => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  };\n\n  const getLocalTodos = () => {\n    if (localStorage.getItem(\"todos\") === null) {\n      localStorage.setItem(\"todos\", JSON.stringify([]));\n    } else {\n      let todoLocal = JSON.parse(localStorage.getItem(\"todos\"));\n      setTodos(todoLocal);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n\n      <header>\n        <h1>React Todo App</h1>\n      </header>\n\n      <Form todos={todos}\n        setTodos={setTodos}\n        inputText={inputText}\n        setInputText={setInputText}\n        setStatus={setStatus}\n        filteredTodos={filteredTodos}\n\n      />\n\n      <TodoList\n        setTodos={setTodos}\n        todos={todos}\n        filteredTodos={filteredTodos}\n      />\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}